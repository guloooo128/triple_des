import 'package:flutter/material.dart';
import 'dart:async';
import 'dart:convert';
import 'package:triple_des/triple_des.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  String _decryptText = 'Unknown';

  // String _text = "";
  String _text = "kpfXechNxusX/iFYLcv6IBf+IVgty/ogb8ze0QJO7E4=";
  String salt = "352150";
  String eKey = "8HkbccYLoG1LNf5j1";

  @override
  void initState() {
    super.initState();
    decryptText();
  }

  Future<void> encryptText() async {
    String text = "text11111111111111111111";
    var key = await TripleDes.md5(salt + eKey);
    var result = await TripleDes.encryptWithData(utf8.encode(text), key, options: [1, 2]);
    setState(() {
      _decryptText = result;
    });
  }

  Future<void> decryptText() async {
    var data = base64Decode(_text);
    var key = await TripleDes.md5(salt + eKey);
    var result = await TripleDes.decryptWithText(_text, key, options: [1, 2]);
    setState(() {
      _decryptText = result;
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: const Text('Plugin example app'),
        ),
        body: ListView(
          children: [Text('$_decryptText')],
        ),
      ),
    );
  }
}
